#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WEB_KHACHSAN_MVC.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QUANLYKHACHSAN_WEB")]
	public partial class KhachSanDBContextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDICHVU(DICHVU instance);
    partial void UpdateDICHVU(DICHVU instance);
    partial void DeleteDICHVU(DICHVU instance);
    partial void InsertHOADON(HOADON instance);
    partial void UpdateHOADON(HOADON instance);
    partial void DeleteHOADON(HOADON instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertLOAIDICHVU(LOAIDICHVU instance);
    partial void UpdateLOAIDICHVU(LOAIDICHVU instance);
    partial void DeleteLOAIDICHVU(LOAIDICHVU instance);
    partial void InsertLOAIPHONG(LOAIPHONG instance);
    partial void UpdateLOAIPHONG(LOAIPHONG instance);
    partial void DeleteLOAIPHONG(LOAIPHONG instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertPHANQUYEN(PHANQUYEN instance);
    partial void UpdatePHANQUYEN(PHANQUYEN instance);
    partial void DeletePHANQUYEN(PHANQUYEN instance);
    partial void InsertPHIEUDATPHONG(PHIEUDATPHONG instance);
    partial void UpdatePHIEUDATPHONG(PHIEUDATPHONG instance);
    partial void DeletePHIEUDATPHONG(PHIEUDATPHONG instance);
    partial void InsertPHIEUSDDV(PHIEUSDDV instance);
    partial void UpdatePHIEUSDDV(PHIEUSDDV instance);
    partial void DeletePHIEUSDDV(PHIEUSDDV instance);
    partial void InsertPHONG(PHONG instance);
    partial void UpdatePHONG(PHONG instance);
    partial void DeletePHONG(PHONG instance);
    partial void InsertTAIKHOAN(TAIKHOAN instance);
    partial void UpdateTAIKHOAN(TAIKHOAN instance);
    partial void DeleteTAIKHOAN(TAIKHOAN instance);
        #endregion
        public KhachSanDBContextDataContext() :
                base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QUANLYKHACHSAN_WEBConnectionString"].ConnectionString, mappingSource)
        {
            OnCreated();
        }
        public KhachSanDBContextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KhachSanDBContextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KhachSanDBContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KhachSanDBContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DICHVU> DICHVUs
		{
			get
			{
				return this.GetTable<DICHVU>();
			}
		}
		
		public System.Data.Linq.Table<HOADON> HOADONs
		{
			get
			{
				return this.GetTable<HOADON>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<LOAIDICHVU> LOAIDICHVUs
		{
			get
			{
				return this.GetTable<LOAIDICHVU>();
			}
		}
		
		public System.Data.Linq.Table<LOAIPHONG> LOAIPHONGs
		{
			get
			{
				return this.GetTable<LOAIPHONG>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<PHANQUYEN> PHANQUYENs
		{
			get
			{
				return this.GetTable<PHANQUYEN>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUDATPHONG> PHIEUDATPHONGs
		{
			get
			{
				return this.GetTable<PHIEUDATPHONG>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUSDDV> PHIEUSDDVs
		{
			get
			{
				return this.GetTable<PHIEUSDDV>();
			}
		}
		
		public System.Data.Linq.Table<PHONG> PHONGs
		{
			get
			{
				return this.GetTable<PHONG>();
			}
		}
		
		public System.Data.Linq.Table<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this.GetTable<TAIKHOAN>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DICHVU")]
	public partial class DICHVU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MADICHVU;
		
		private string _TENDICHVU;
		
		private string _DONVITINH;
		
		private System.Nullable<decimal> _GIATHUEDICHVU;
		
		private System.Nullable<int> _MALOAIDICHVU;
		
		private EntitySet<PHIEUSDDV> _PHIEUSDDVs;
		
		private EntityRef<LOAIDICHVU> _LOAIDICHVU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADICHVUChanging(int value);
    partial void OnMADICHVUChanged();
    partial void OnTENDICHVUChanging(string value);
    partial void OnTENDICHVUChanged();
    partial void OnDONVITINHChanging(string value);
    partial void OnDONVITINHChanged();
    partial void OnGIATHUEDICHVUChanging(System.Nullable<decimal> value);
    partial void OnGIATHUEDICHVUChanged();
    partial void OnMALOAIDICHVUChanging(System.Nullable<int> value);
    partial void OnMALOAIDICHVUChanged();
    #endregion
		
		public DICHVU()
		{
			this._PHIEUSDDVs = new EntitySet<PHIEUSDDV>(new Action<PHIEUSDDV>(this.attach_PHIEUSDDVs), new Action<PHIEUSDDV>(this.detach_PHIEUSDDVs));
			this._LOAIDICHVU = default(EntityRef<LOAIDICHVU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADICHVU", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MADICHVU
		{
			get
			{
				return this._MADICHVU;
			}
			set
			{
				if ((this._MADICHVU != value))
				{
					this.OnMADICHVUChanging(value);
					this.SendPropertyChanging();
					this._MADICHVU = value;
					this.SendPropertyChanged("MADICHVU");
					this.OnMADICHVUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENDICHVU", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TENDICHVU
		{
			get
			{
				return this._TENDICHVU;
			}
			set
			{
				if ((this._TENDICHVU != value))
				{
					this.OnTENDICHVUChanging(value);
					this.SendPropertyChanging();
					this._TENDICHVU = value;
					this.SendPropertyChanged("TENDICHVU");
					this.OnTENDICHVUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONVITINH", DbType="NVarChar(20)")]
		public string DONVITINH
		{
			get
			{
				return this._DONVITINH;
			}
			set
			{
				if ((this._DONVITINH != value))
				{
					this.OnDONVITINHChanging(value);
					this.SendPropertyChanging();
					this._DONVITINH = value;
					this.SendPropertyChanged("DONVITINH");
					this.OnDONVITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIATHUEDICHVU", DbType="Money")]
		public System.Nullable<decimal> GIATHUEDICHVU
		{
			get
			{
				return this._GIATHUEDICHVU;
			}
			set
			{
				if ((this._GIATHUEDICHVU != value))
				{
					this.OnGIATHUEDICHVUChanging(value);
					this.SendPropertyChanging();
					this._GIATHUEDICHVU = value;
					this.SendPropertyChanged("GIATHUEDICHVU");
					this.OnGIATHUEDICHVUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAIDICHVU", DbType="Int")]
		public System.Nullable<int> MALOAIDICHVU
		{
			get
			{
				return this._MALOAIDICHVU;
			}
			set
			{
				if ((this._MALOAIDICHVU != value))
				{
					if (this._LOAIDICHVU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOAIDICHVUChanging(value);
					this.SendPropertyChanging();
					this._MALOAIDICHVU = value;
					this.SendPropertyChanged("MALOAIDICHVU");
					this.OnMALOAIDICHVUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DICHVU_PHIEUSDDV", Storage="_PHIEUSDDVs", ThisKey="MADICHVU", OtherKey="MADICHVU")]
		public EntitySet<PHIEUSDDV> PHIEUSDDVs
		{
			get
			{
				return this._PHIEUSDDVs;
			}
			set
			{
				this._PHIEUSDDVs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIDICHVU_DICHVU", Storage="_LOAIDICHVU", ThisKey="MALOAIDICHVU", OtherKey="MALOAIDICHVU", IsForeignKey=true, DeleteRule="CASCADE")]
		public LOAIDICHVU LOAIDICHVU
		{
			get
			{
				return this._LOAIDICHVU.Entity;
			}
			set
			{
				LOAIDICHVU previousValue = this._LOAIDICHVU.Entity;
				if (((previousValue != value) 
							|| (this._LOAIDICHVU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAIDICHVU.Entity = null;
						previousValue.DICHVUs.Remove(this);
					}
					this._LOAIDICHVU.Entity = value;
					if ((value != null))
					{
						value.DICHVUs.Add(this);
						this._MALOAIDICHVU = value.MALOAIDICHVU;
					}
					else
					{
						this._MALOAIDICHVU = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOAIDICHVU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIEUSDDVs(PHIEUSDDV entity)
		{
			this.SendPropertyChanging();
			entity.DICHVU = this;
		}
		
		private void detach_PHIEUSDDVs(PHIEUSDDV entity)
		{
			this.SendPropertyChanging();
			entity.DICHVU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOADON")]
	public partial class HOADON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAHOADON;
		
		private System.Nullable<decimal> _TONGTIEN;
		
		private System.Nullable<System.DateTime> _NGAYTHANHTOAN;
		
		private System.Nullable<int> _MAPHIEUDATPHONG;
		
		private System.Nullable<int> _MANHANVIEN;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
		private EntityRef<PHIEUDATPHONG> _PHIEUDATPHONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHOADONChanging(int value);
    partial void OnMAHOADONChanged();
    partial void OnTONGTIENChanging(System.Nullable<decimal> value);
    partial void OnTONGTIENChanged();
    partial void OnNGAYTHANHTOANChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYTHANHTOANChanged();
    partial void OnMAPHIEUDATPHONGChanging(System.Nullable<int> value);
    partial void OnMAPHIEUDATPHONGChanged();
    partial void OnMANHANVIENChanging(System.Nullable<int> value);
    partial void OnMANHANVIENChanged();
    #endregion
		
		public HOADON()
		{
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			this._PHIEUDATPHONG = default(EntityRef<PHIEUDATPHONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHOADON", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAHOADON
		{
			get
			{
				return this._MAHOADON;
			}
			set
			{
				if ((this._MAHOADON != value))
				{
					this.OnMAHOADONChanging(value);
					this.SendPropertyChanging();
					this._MAHOADON = value;
					this.SendPropertyChanged("MAHOADON");
					this.OnMAHOADONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTIEN", DbType="Money")]
		public System.Nullable<decimal> TONGTIEN
		{
			get
			{
				return this._TONGTIEN;
			}
			set
			{
				if ((this._TONGTIEN != value))
				{
					this.OnTONGTIENChanging(value);
					this.SendPropertyChanging();
					this._TONGTIEN = value;
					this.SendPropertyChanged("TONGTIEN");
					this.OnTONGTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYTHANHTOAN", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYTHANHTOAN
		{
			get
			{
				return this._NGAYTHANHTOAN;
			}
			set
			{
				if ((this._NGAYTHANHTOAN != value))
				{
					this.OnNGAYTHANHTOANChanging(value);
					this.SendPropertyChanging();
					this._NGAYTHANHTOAN = value;
					this.SendPropertyChanged("NGAYTHANHTOAN");
					this.OnNGAYTHANHTOANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEUDATPHONG", DbType="Int")]
		public System.Nullable<int> MAPHIEUDATPHONG
		{
			get
			{
				return this._MAPHIEUDATPHONG;
			}
			set
			{
				if ((this._MAPHIEUDATPHONG != value))
				{
					if (this._PHIEUDATPHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHIEUDATPHONGChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEUDATPHONG = value;
					this.SendPropertyChanged("MAPHIEUDATPHONG");
					this.OnMAPHIEUDATPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANHANVIEN", DbType="Int")]
		public System.Nullable<int> MANHANVIEN
		{
			get
			{
				return this._MANHANVIEN;
			}
			set
			{
				if ((this._MANHANVIEN != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANHANVIENChanging(value);
					this.SendPropertyChanging();
					this._MANHANVIEN = value;
					this.SendPropertyChanged("MANHANVIEN");
					this.OnMANHANVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOADON", Storage="_NHANVIEN", ThisKey="MANHANVIEN", OtherKey="MANHANVIEN", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._MANHANVIEN = value.MANHANVIEN;
					}
					else
					{
						this._MANHANVIEN = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUDATPHONG_HOADON", Storage="_PHIEUDATPHONG", ThisKey="MAPHIEUDATPHONG", OtherKey="MAPHIEUDATPHONG", IsForeignKey=true, DeleteRule="CASCADE")]
		public PHIEUDATPHONG PHIEUDATPHONG
		{
			get
			{
				return this._PHIEUDATPHONG.Entity;
			}
			set
			{
				PHIEUDATPHONG previousValue = this._PHIEUDATPHONG.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUDATPHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUDATPHONG.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._PHIEUDATPHONG.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._MAPHIEUDATPHONG = value.MAPHIEUDATPHONG;
					}
					else
					{
						this._MAPHIEUDATPHONG = default(Nullable<int>);
					}
					this.SendPropertyChanged("PHIEUDATPHONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAKH;
		
		private string _TENKH;
		
		private System.Nullable<long> _CCCD;
		
		private string _EMAIL;
		
		private string _DT;
		
		private EntitySet<PHIEUDATPHONG> _PHIEUDATPHONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHChanging(int value);
    partial void OnMAKHChanged();
    partial void OnTENKHChanging(string value);
    partial void OnTENKHChanged();
    partial void OnCCCDChanging(System.Nullable<long> value);
    partial void OnCCCDChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnDTChanging(string value);
    partial void OnDTChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._PHIEUDATPHONGs = new EntitySet<PHIEUDATPHONG>(new Action<PHIEUDATPHONG>(this.attach_PHIEUDATPHONGs), new Action<PHIEUDATPHONG>(this.detach_PHIEUDATPHONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKH", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TENKH
		{
			get
			{
				return this._TENKH;
			}
			set
			{
				if ((this._TENKH != value))
				{
					this.OnTENKHChanging(value);
					this.SendPropertyChanging();
					this._TENKH = value;
					this.SendPropertyChanged("TENKH");
					this.OnTENKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCCD", DbType="BigInt")]
		public System.Nullable<long> CCCD
		{
			get
			{
				return this._CCCD;
			}
			set
			{
				if ((this._CCCD != value))
				{
					this.OnCCCDChanging(value);
					this.SendPropertyChanging();
					this._CCCD = value;
					this.SendPropertyChanged("CCCD");
					this.OnCCCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(100)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DT", DbType="VarChar(11)")]
		public string DT
		{
			get
			{
				return this._DT;
			}
			set
			{
				if ((this._DT != value))
				{
					this.OnDTChanging(value);
					this.SendPropertyChanging();
					this._DT = value;
					this.SendPropertyChanged("DT");
					this.OnDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_PHIEUDATPHONG", Storage="_PHIEUDATPHONGs", ThisKey="MAKH", OtherKey="MAKH")]
		public EntitySet<PHIEUDATPHONG> PHIEUDATPHONGs
		{
			get
			{
				return this._PHIEUDATPHONGs;
			}
			set
			{
				this._PHIEUDATPHONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIEUDATPHONGs(PHIEUDATPHONG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_PHIEUDATPHONGs(PHIEUDATPHONG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAIDICHVU")]
	public partial class LOAIDICHVU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MALOAIDICHVU;
		
		private string _TENLOAIDICHVU;
		
		private EntitySet<DICHVU> _DICHVUs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOAIDICHVUChanging(int value);
    partial void OnMALOAIDICHVUChanged();
    partial void OnTENLOAIDICHVUChanging(string value);
    partial void OnTENLOAIDICHVUChanged();
    #endregion
		
		public LOAIDICHVU()
		{
			this._DICHVUs = new EntitySet<DICHVU>(new Action<DICHVU>(this.attach_DICHVUs), new Action<DICHVU>(this.detach_DICHVUs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAIDICHVU", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MALOAIDICHVU
		{
			get
			{
				return this._MALOAIDICHVU;
			}
			set
			{
				if ((this._MALOAIDICHVU != value))
				{
					this.OnMALOAIDICHVUChanging(value);
					this.SendPropertyChanging();
					this._MALOAIDICHVU = value;
					this.SendPropertyChanged("MALOAIDICHVU");
					this.OnMALOAIDICHVUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAIDICHVU", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TENLOAIDICHVU
		{
			get
			{
				return this._TENLOAIDICHVU;
			}
			set
			{
				if ((this._TENLOAIDICHVU != value))
				{
					this.OnTENLOAIDICHVUChanging(value);
					this.SendPropertyChanging();
					this._TENLOAIDICHVU = value;
					this.SendPropertyChanged("TENLOAIDICHVU");
					this.OnTENLOAIDICHVUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIDICHVU_DICHVU", Storage="_DICHVUs", ThisKey="MALOAIDICHVU", OtherKey="MALOAIDICHVU")]
		public EntitySet<DICHVU> DICHVUs
		{
			get
			{
				return this._DICHVUs;
			}
			set
			{
				this._DICHVUs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DICHVUs(DICHVU entity)
		{
			this.SendPropertyChanging();
			entity.LOAIDICHVU = this;
		}
		
		private void detach_DICHVUs(DICHVU entity)
		{
			this.SendPropertyChanging();
			entity.LOAIDICHVU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAIPHONG")]
	public partial class LOAIPHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MALOAIPHONG;
		
		private string _TENLOAIPHONG;
		
		private System.Nullable<decimal> _GIATHUE;
		
		private EntitySet<PHONG> _PHONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOAIPHONGChanging(int value);
    partial void OnMALOAIPHONGChanged();
    partial void OnTENLOAIPHONGChanging(string value);
    partial void OnTENLOAIPHONGChanged();
    partial void OnGIATHUEChanging(System.Nullable<decimal> value);
    partial void OnGIATHUEChanged();
    #endregion
		
		public LOAIPHONG()
		{
			this._PHONGs = new EntitySet<PHONG>(new Action<PHONG>(this.attach_PHONGs), new Action<PHONG>(this.detach_PHONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAIPHONG", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MALOAIPHONG
		{
			get
			{
				return this._MALOAIPHONG;
			}
			set
			{
				if ((this._MALOAIPHONG != value))
				{
					this.OnMALOAIPHONGChanging(value);
					this.SendPropertyChanging();
					this._MALOAIPHONG = value;
					this.SendPropertyChanged("MALOAIPHONG");
					this.OnMALOAIPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAIPHONG", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TENLOAIPHONG
		{
			get
			{
				return this._TENLOAIPHONG;
			}
			set
			{
				if ((this._TENLOAIPHONG != value))
				{
					this.OnTENLOAIPHONGChanging(value);
					this.SendPropertyChanging();
					this._TENLOAIPHONG = value;
					this.SendPropertyChanged("TENLOAIPHONG");
					this.OnTENLOAIPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIATHUE", DbType="Money")]
		public System.Nullable<decimal> GIATHUE
		{
			get
			{
				return this._GIATHUE;
			}
			set
			{
				if ((this._GIATHUE != value))
				{
					this.OnGIATHUEChanging(value);
					this.SendPropertyChanging();
					this._GIATHUE = value;
					this.SendPropertyChanged("GIATHUE");
					this.OnGIATHUEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIPHONG_PHONG", Storage="_PHONGs", ThisKey="MALOAIPHONG", OtherKey="MALOAIPHONG")]
		public EntitySet<PHONG> PHONGs
		{
			get
			{
				return this._PHONGs;
			}
			set
			{
				this._PHONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHONGs(PHONG entity)
		{
			this.SendPropertyChanging();
			entity.LOAIPHONG = this;
		}
		
		private void detach_PHONGs(PHONG entity)
		{
			this.SendPropertyChanging();
			entity.LOAIPHONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MANHANVIEN;
		
		private string _TENNHANVIEN;
		
		private System.Nullable<short> _NAMSINH;
		
		private string _EMAIL;
		
		private System.Nullable<long> _CCCD;
		
		private string _CHUCVU;
		
		private string _DIACHI;
		
		private string _DT;
		
		private EntitySet<HOADON> _HOADONs;
		
		private EntitySet<PHIEUDATPHONG> _PHIEUDATPHONGs;
		
		private EntitySet<PHIEUSDDV> _PHIEUSDDVs;
		
		private EntitySet<TAIKHOAN> _TAIKHOANs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANHANVIENChanging(int value);
    partial void OnMANHANVIENChanged();
    partial void OnTENNHANVIENChanging(string value);
    partial void OnTENNHANVIENChanged();
    partial void OnNAMSINHChanging(System.Nullable<short> value);
    partial void OnNAMSINHChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnCCCDChanging(System.Nullable<long> value);
    partial void OnCCCDChanged();
    partial void OnCHUCVUChanging(string value);
    partial void OnCHUCVUChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnDTChanging(string value);
    partial void OnDTChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			this._PHIEUDATPHONGs = new EntitySet<PHIEUDATPHONG>(new Action<PHIEUDATPHONG>(this.attach_PHIEUDATPHONGs), new Action<PHIEUDATPHONG>(this.detach_PHIEUDATPHONGs));
			this._PHIEUSDDVs = new EntitySet<PHIEUSDDV>(new Action<PHIEUSDDV>(this.attach_PHIEUSDDVs), new Action<PHIEUSDDV>(this.detach_PHIEUSDDVs));
			this._TAIKHOANs = new EntitySet<TAIKHOAN>(new Action<TAIKHOAN>(this.attach_TAIKHOANs), new Action<TAIKHOAN>(this.detach_TAIKHOANs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANHANVIEN", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MANHANVIEN
		{
			get
			{
				return this._MANHANVIEN;
			}
			set
			{
				if ((this._MANHANVIEN != value))
				{
					this.OnMANHANVIENChanging(value);
					this.SendPropertyChanging();
					this._MANHANVIEN = value;
					this.SendPropertyChanged("MANHANVIEN");
					this.OnMANHANVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNHANVIEN", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TENNHANVIEN
		{
			get
			{
				return this._TENNHANVIEN;
			}
			set
			{
				if ((this._TENNHANVIEN != value))
				{
					this.OnTENNHANVIENChanging(value);
					this.SendPropertyChanging();
					this._TENNHANVIEN = value;
					this.SendPropertyChanged("TENNHANVIEN");
					this.OnTENNHANVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAMSINH", DbType="SmallInt")]
		public System.Nullable<short> NAMSINH
		{
			get
			{
				return this._NAMSINH;
			}
			set
			{
				if ((this._NAMSINH != value))
				{
					this.OnNAMSINHChanging(value);
					this.SendPropertyChanging();
					this._NAMSINH = value;
					this.SendPropertyChanged("NAMSINH");
					this.OnNAMSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(100)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCCD", DbType="BigInt")]
		public System.Nullable<long> CCCD
		{
			get
			{
				return this._CCCD;
			}
			set
			{
				if ((this._CCCD != value))
				{
					this.OnCCCDChanging(value);
					this.SendPropertyChanging();
					this._CCCD = value;
					this.SendPropertyChanged("CCCD");
					this.OnCCCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHUCVU", DbType="NVarChar(50)")]
		public string CHUCVU
		{
			get
			{
				return this._CHUCVU;
			}
			set
			{
				if ((this._CHUCVU != value))
				{
					this.OnCHUCVUChanging(value);
					this.SendPropertyChanging();
					this._CHUCVU = value;
					this.SendPropertyChanged("CHUCVU");
					this.OnCHUCVUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(100)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DT", DbType="VarChar(11)")]
		public string DT
		{
			get
			{
				return this._DT;
			}
			set
			{
				if ((this._DT != value))
				{
					this.OnDTChanging(value);
					this.SendPropertyChanging();
					this._DT = value;
					this.SendPropertyChanged("DT");
					this.OnDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOADON", Storage="_HOADONs", ThisKey="MANHANVIEN", OtherKey="MANHANVIEN")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUDATPHONG", Storage="_PHIEUDATPHONGs", ThisKey="MANHANVIEN", OtherKey="MANHANVIEN")]
		public EntitySet<PHIEUDATPHONG> PHIEUDATPHONGs
		{
			get
			{
				return this._PHIEUDATPHONGs;
			}
			set
			{
				this._PHIEUDATPHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUSDDV", Storage="_PHIEUSDDVs", ThisKey="MANHANVIEN", OtherKey="MANHANVIEN")]
		public EntitySet<PHIEUSDDV> PHIEUSDDVs
		{
			get
			{
				return this._PHIEUSDDVs;
			}
			set
			{
				this._PHIEUSDDVs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_TAIKHOAN", Storage="_TAIKHOANs", ThisKey="MANHANVIEN", OtherKey="MANHANVIEN")]
		public EntitySet<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this._TAIKHOANs;
			}
			set
			{
				this._TAIKHOANs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_PHIEUDATPHONGs(PHIEUDATPHONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_PHIEUDATPHONGs(PHIEUDATPHONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_PHIEUSDDVs(PHIEUSDDV entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_PHIEUSDDVs(PHIEUSDDV entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_TAIKHOANs(TAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_TAIKHOANs(TAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHANQUYEN")]
	public partial class PHANQUYEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAPHANQUYEN;
		
		private string _TENPHANQUYEN;
		
		private string _QUYENHAN;
		
		private EntitySet<TAIKHOAN> _TAIKHOANs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHANQUYENChanging(int value);
    partial void OnMAPHANQUYENChanged();
    partial void OnTENPHANQUYENChanging(string value);
    partial void OnTENPHANQUYENChanged();
    partial void OnQUYENHANChanging(string value);
    partial void OnQUYENHANChanged();
    #endregion
		
		public PHANQUYEN()
		{
			this._TAIKHOANs = new EntitySet<TAIKHOAN>(new Action<TAIKHOAN>(this.attach_TAIKHOANs), new Action<TAIKHOAN>(this.detach_TAIKHOANs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHANQUYEN", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAPHANQUYEN
		{
			get
			{
				return this._MAPHANQUYEN;
			}
			set
			{
				if ((this._MAPHANQUYEN != value))
				{
					this.OnMAPHANQUYENChanging(value);
					this.SendPropertyChanging();
					this._MAPHANQUYEN = value;
					this.SendPropertyChanged("MAPHANQUYEN");
					this.OnMAPHANQUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENPHANQUYEN", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TENPHANQUYEN
		{
			get
			{
				return this._TENPHANQUYEN;
			}
			set
			{
				if ((this._TENPHANQUYEN != value))
				{
					this.OnTENPHANQUYENChanging(value);
					this.SendPropertyChanging();
					this._TENPHANQUYEN = value;
					this.SendPropertyChanged("TENPHANQUYEN");
					this.OnTENPHANQUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUYENHAN", DbType="NVarChar(30)")]
		public string QUYENHAN
		{
			get
			{
				return this._QUYENHAN;
			}
			set
			{
				if ((this._QUYENHAN != value))
				{
					this.OnQUYENHANChanging(value);
					this.SendPropertyChanging();
					this._QUYENHAN = value;
					this.SendPropertyChanged("QUYENHAN");
					this.OnQUYENHANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHANQUYEN_TAIKHOAN", Storage="_TAIKHOANs", ThisKey="MAPHANQUYEN", OtherKey="MAPHANQUYEN")]
		public EntitySet<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this._TAIKHOANs;
			}
			set
			{
				this._TAIKHOANs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TAIKHOANs(TAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.PHANQUYEN = this;
		}
		
		private void detach_TAIKHOANs(TAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.PHANQUYEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUDATPHONG")]
	public partial class PHIEUDATPHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAPHIEUDATPHONG;
		
		private System.Nullable<int> _SONGUOI;
		
		private System.Nullable<System.DateTime> _NGAYNHANPHONG;
		
		private System.Nullable<System.DateTime> _NGAYTRADUKIEN;
		
		private System.Nullable<decimal> _TIENCOC;
		
		private System.Nullable<int> _MAPHONG;
		
		private System.Nullable<int> _MAKH;
		
		private System.Nullable<int> _MANHANVIEN;
		
		private EntitySet<HOADON> _HOADONs;
		
		private EntitySet<PHIEUSDDV> _PHIEUSDDVs;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
		private EntityRef<PHONG> _PHONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHIEUDATPHONGChanging(int value);
    partial void OnMAPHIEUDATPHONGChanged();
    partial void OnSONGUOIChanging(System.Nullable<int> value);
    partial void OnSONGUOIChanged();
    partial void OnNGAYNHANPHONGChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYNHANPHONGChanged();
    partial void OnNGAYTRADUKIENChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYTRADUKIENChanged();
    partial void OnTIENCOCChanging(System.Nullable<decimal> value);
    partial void OnTIENCOCChanged();
    partial void OnMAPHONGChanging(System.Nullable<int> value);
    partial void OnMAPHONGChanged();
    partial void OnMAKHChanging(System.Nullable<int> value);
    partial void OnMAKHChanged();
    partial void OnMANHANVIENChanging(System.Nullable<int> value);
    partial void OnMANHANVIENChanged();
    #endregion
		
		public PHIEUDATPHONG()
		{
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			this._PHIEUSDDVs = new EntitySet<PHIEUSDDV>(new Action<PHIEUSDDV>(this.attach_PHIEUSDDVs), new Action<PHIEUSDDV>(this.detach_PHIEUSDDVs));
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			this._PHONG = default(EntityRef<PHONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEUDATPHONG", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAPHIEUDATPHONG
		{
			get
			{
				return this._MAPHIEUDATPHONG;
			}
			set
			{
				if ((this._MAPHIEUDATPHONG != value))
				{
					this.OnMAPHIEUDATPHONGChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEUDATPHONG = value;
					this.SendPropertyChanged("MAPHIEUDATPHONG");
					this.OnMAPHIEUDATPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SONGUOI", DbType="Int")]
		public System.Nullable<int> SONGUOI
		{
			get
			{
				return this._SONGUOI;
			}
			set
			{
				if ((this._SONGUOI != value))
				{
					this.OnSONGUOIChanging(value);
					this.SendPropertyChanging();
					this._SONGUOI = value;
					this.SendPropertyChanged("SONGUOI");
					this.OnSONGUOIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYNHANPHONG", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYNHANPHONG
		{
			get
			{
				return this._NGAYNHANPHONG;
			}
			set
			{
				if ((this._NGAYNHANPHONG != value))
				{
					this.OnNGAYNHANPHONGChanging(value);
					this.SendPropertyChanging();
					this._NGAYNHANPHONG = value;
					this.SendPropertyChanged("NGAYNHANPHONG");
					this.OnNGAYNHANPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYTRADUKIEN", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYTRADUKIEN
		{
			get
			{
				return this._NGAYTRADUKIEN;
			}
			set
			{
				if ((this._NGAYTRADUKIEN != value))
				{
					this.OnNGAYTRADUKIENChanging(value);
					this.SendPropertyChanging();
					this._NGAYTRADUKIEN = value;
					this.SendPropertyChanged("NGAYTRADUKIEN");
					this.OnNGAYTRADUKIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIENCOC", DbType="Money")]
		public System.Nullable<decimal> TIENCOC
		{
			get
			{
				return this._TIENCOC;
			}
			set
			{
				if ((this._TIENCOC != value))
				{
					this.OnTIENCOCChanging(value);
					this.SendPropertyChanging();
					this._TIENCOC = value;
					this.SendPropertyChanged("TIENCOC");
					this.OnTIENCOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHONG", DbType="Int")]
		public System.Nullable<int> MAPHONG
		{
			get
			{
				return this._MAPHONG;
			}
			set
			{
				if ((this._MAPHONG != value))
				{
					if (this._PHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHONGChanging(value);
					this.SendPropertyChanging();
					this._MAPHONG = value;
					this.SendPropertyChanged("MAPHONG");
					this.OnMAPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="Int")]
		public System.Nullable<int> MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANHANVIEN", DbType="Int")]
		public System.Nullable<int> MANHANVIEN
		{
			get
			{
				return this._MANHANVIEN;
			}
			set
			{
				if ((this._MANHANVIEN != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANHANVIENChanging(value);
					this.SendPropertyChanging();
					this._MANHANVIEN = value;
					this.SendPropertyChanged("MANHANVIEN");
					this.OnMANHANVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUDATPHONG_HOADON", Storage="_HOADONs", ThisKey="MAPHIEUDATPHONG", OtherKey="MAPHIEUDATPHONG")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUDATPHONG_PHIEUSDDV", Storage="_PHIEUSDDVs", ThisKey="MAPHIEUDATPHONG", OtherKey="MAPHIEUDATPHONG")]
		public EntitySet<PHIEUSDDV> PHIEUSDDVs
		{
			get
			{
				return this._PHIEUSDDVs;
			}
			set
			{
				this._PHIEUSDDVs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_PHIEUDATPHONG", Storage="_KHACHHANG", ThisKey="MAKH", OtherKey="MAKH", IsForeignKey=true, DeleteRule="CASCADE")]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.PHIEUDATPHONGs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.PHIEUDATPHONGs.Add(this);
						this._MAKH = value.MAKH;
					}
					else
					{
						this._MAKH = default(Nullable<int>);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUDATPHONG", Storage="_NHANVIEN", ThisKey="MANHANVIEN", OtherKey="MANHANVIEN", IsForeignKey=true, DeleteRule="CASCADE")]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.PHIEUDATPHONGs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.PHIEUDATPHONGs.Add(this);
						this._MANHANVIEN = value.MANHANVIEN;
					}
					else
					{
						this._MANHANVIEN = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_PHIEUDATPHONG", Storage="_PHONG", ThisKey="MAPHONG", OtherKey="MAPHONG", IsForeignKey=true, DeleteRule="CASCADE")]
		public PHONG PHONG
		{
			get
			{
				return this._PHONG.Entity;
			}
			set
			{
				PHONG previousValue = this._PHONG.Entity;
				if (((previousValue != value) 
							|| (this._PHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONG.Entity = null;
						previousValue.PHIEUDATPHONGs.Remove(this);
					}
					this._PHONG.Entity = value;
					if ((value != null))
					{
						value.PHIEUDATPHONGs.Add(this);
						this._MAPHONG = value.MAPHONG;
					}
					else
					{
						this._MAPHONG = default(Nullable<int>);
					}
					this.SendPropertyChanged("PHONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUDATPHONG = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUDATPHONG = null;
		}
		
		private void attach_PHIEUSDDVs(PHIEUSDDV entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUDATPHONG = this;
		}
		
		private void detach_PHIEUSDDVs(PHIEUSDDV entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUDATPHONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUSDDV")]
	public partial class PHIEUSDDV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAPHIEUSDDV;
		
		private System.Nullable<System.DateTime> _NGAYSUDUNG;
		
		private System.Nullable<int> _MADICHVU;
		
		private System.Nullable<int> _MAPHIEUDATPHONG;
		
		private System.Nullable<int> _MANHANVIEN;
		
		private EntityRef<PHIEUDATPHONG> _PHIEUDATPHONG;
		
		private EntityRef<DICHVU> _DICHVU;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHIEUSDDVChanging(int value);
    partial void OnMAPHIEUSDDVChanged();
    partial void OnNGAYSUDUNGChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSUDUNGChanged();
    partial void OnMADICHVUChanging(System.Nullable<int> value);
    partial void OnMADICHVUChanged();
    partial void OnMAPHIEUDATPHONGChanging(System.Nullable<int> value);
    partial void OnMAPHIEUDATPHONGChanged();
    partial void OnMANHANVIENChanging(System.Nullable<int> value);
    partial void OnMANHANVIENChanged();
    #endregion
		
		public PHIEUSDDV()
		{
			this._PHIEUDATPHONG = default(EntityRef<PHIEUDATPHONG>);
			this._DICHVU = default(EntityRef<DICHVU>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEUSDDV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAPHIEUSDDV
		{
			get
			{
				return this._MAPHIEUSDDV;
			}
			set
			{
				if ((this._MAPHIEUSDDV != value))
				{
					this.OnMAPHIEUSDDVChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEUSDDV = value;
					this.SendPropertyChanged("MAPHIEUSDDV");
					this.OnMAPHIEUSDDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSUDUNG", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYSUDUNG
		{
			get
			{
				return this._NGAYSUDUNG;
			}
			set
			{
				if ((this._NGAYSUDUNG != value))
				{
					this.OnNGAYSUDUNGChanging(value);
					this.SendPropertyChanging();
					this._NGAYSUDUNG = value;
					this.SendPropertyChanged("NGAYSUDUNG");
					this.OnNGAYSUDUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADICHVU", DbType="Int")]
		public System.Nullable<int> MADICHVU
		{
			get
			{
				return this._MADICHVU;
			}
			set
			{
				if ((this._MADICHVU != value))
				{
					if (this._DICHVU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMADICHVUChanging(value);
					this.SendPropertyChanging();
					this._MADICHVU = value;
					this.SendPropertyChanged("MADICHVU");
					this.OnMADICHVUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEUDATPHONG", DbType="Int")]
		public System.Nullable<int> MAPHIEUDATPHONG
		{
			get
			{
				return this._MAPHIEUDATPHONG;
			}
			set
			{
				if ((this._MAPHIEUDATPHONG != value))
				{
					if (this._PHIEUDATPHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHIEUDATPHONGChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEUDATPHONG = value;
					this.SendPropertyChanged("MAPHIEUDATPHONG");
					this.OnMAPHIEUDATPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANHANVIEN", DbType="Int")]
		public System.Nullable<int> MANHANVIEN
		{
			get
			{
				return this._MANHANVIEN;
			}
			set
			{
				if ((this._MANHANVIEN != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANHANVIENChanging(value);
					this.SendPropertyChanging();
					this._MANHANVIEN = value;
					this.SendPropertyChanged("MANHANVIEN");
					this.OnMANHANVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUDATPHONG_PHIEUSDDV", Storage="_PHIEUDATPHONG", ThisKey="MAPHIEUDATPHONG", OtherKey="MAPHIEUDATPHONG", IsForeignKey=true, DeleteRule="CASCADE")]
		public PHIEUDATPHONG PHIEUDATPHONG
		{
			get
			{
				return this._PHIEUDATPHONG.Entity;
			}
			set
			{
				PHIEUDATPHONG previousValue = this._PHIEUDATPHONG.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUDATPHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUDATPHONG.Entity = null;
						previousValue.PHIEUSDDVs.Remove(this);
					}
					this._PHIEUDATPHONG.Entity = value;
					if ((value != null))
					{
						value.PHIEUSDDVs.Add(this);
						this._MAPHIEUDATPHONG = value.MAPHIEUDATPHONG;
					}
					else
					{
						this._MAPHIEUDATPHONG = default(Nullable<int>);
					}
					this.SendPropertyChanged("PHIEUDATPHONG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DICHVU_PHIEUSDDV", Storage="_DICHVU", ThisKey="MADICHVU", OtherKey="MADICHVU", IsForeignKey=true, DeleteRule="CASCADE")]
		public DICHVU DICHVU
		{
			get
			{
				return this._DICHVU.Entity;
			}
			set
			{
				DICHVU previousValue = this._DICHVU.Entity;
				if (((previousValue != value) 
							|| (this._DICHVU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DICHVU.Entity = null;
						previousValue.PHIEUSDDVs.Remove(this);
					}
					this._DICHVU.Entity = value;
					if ((value != null))
					{
						value.PHIEUSDDVs.Add(this);
						this._MADICHVU = value.MADICHVU;
					}
					else
					{
						this._MADICHVU = default(Nullable<int>);
					}
					this.SendPropertyChanged("DICHVU");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUSDDV", Storage="_NHANVIEN", ThisKey="MANHANVIEN", OtherKey="MANHANVIEN", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.PHIEUSDDVs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.PHIEUSDDVs.Add(this);
						this._MANHANVIEN = value.MANHANVIEN;
					}
					else
					{
						this._MANHANVIEN = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHONG")]
	public partial class PHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAPHONG;
		
		private string _TENPHONG;
		
		private System.Nullable<int> _SONGUOITOIDA;
		
		private string _TINHTRANG;
		
		private string _HINH;
		
		private System.Nullable<int> _MALOAIPHONG;
		
		private EntitySet<PHIEUDATPHONG> _PHIEUDATPHONGs;
		
		private EntityRef<LOAIPHONG> _LOAIPHONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHONGChanging(int value);
    partial void OnMAPHONGChanged();
    partial void OnTENPHONGChanging(string value);
    partial void OnTENPHONGChanged();
    partial void OnSONGUOITOIDAChanging(System.Nullable<int> value);
    partial void OnSONGUOITOIDAChanged();
    partial void OnTINHTRANGChanging(string value);
    partial void OnTINHTRANGChanged();
    partial void OnHINHChanging(string value);
    partial void OnHINHChanged();
    partial void OnMALOAIPHONGChanging(System.Nullable<int> value);
    partial void OnMALOAIPHONGChanged();
    #endregion
		
		public PHONG()
		{
			this._PHIEUDATPHONGs = new EntitySet<PHIEUDATPHONG>(new Action<PHIEUDATPHONG>(this.attach_PHIEUDATPHONGs), new Action<PHIEUDATPHONG>(this.detach_PHIEUDATPHONGs));
			this._LOAIPHONG = default(EntityRef<LOAIPHONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHONG", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAPHONG
		{
			get
			{
				return this._MAPHONG;
			}
			set
			{
				if ((this._MAPHONG != value))
				{
					this.OnMAPHONGChanging(value);
					this.SendPropertyChanging();
					this._MAPHONG = value;
					this.SendPropertyChanged("MAPHONG");
					this.OnMAPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENPHONG", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TENPHONG
		{
			get
			{
				return this._TENPHONG;
			}
			set
			{
				if ((this._TENPHONG != value))
				{
					this.OnTENPHONGChanging(value);
					this.SendPropertyChanging();
					this._TENPHONG = value;
					this.SendPropertyChanged("TENPHONG");
					this.OnTENPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SONGUOITOIDA", DbType="Int")]
		public System.Nullable<int> SONGUOITOIDA
		{
			get
			{
				return this._SONGUOITOIDA;
			}
			set
			{
				if ((this._SONGUOITOIDA != value))
				{
					this.OnSONGUOITOIDAChanging(value);
					this.SendPropertyChanging();
					this._SONGUOITOIDA = value;
					this.SendPropertyChanged("SONGUOITOIDA");
					this.OnSONGUOITOIDAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANG", DbType="NVarChar(30)")]
		public string TINHTRANG
		{
			get
			{
				return this._TINHTRANG;
			}
			set
			{
				if ((this._TINHTRANG != value))
				{
					this.OnTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANG = value;
					this.SendPropertyChanged("TINHTRANG");
					this.OnTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINH", DbType="NVarChar(30)")]
		public string HINH
		{
			get
			{
				return this._HINH;
			}
			set
			{
				if ((this._HINH != value))
				{
					this.OnHINHChanging(value);
					this.SendPropertyChanging();
					this._HINH = value;
					this.SendPropertyChanged("HINH");
					this.OnHINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAIPHONG", DbType="Int")]
		public System.Nullable<int> MALOAIPHONG
		{
			get
			{
				return this._MALOAIPHONG;
			}
			set
			{
				if ((this._MALOAIPHONG != value))
				{
					if (this._LOAIPHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOAIPHONGChanging(value);
					this.SendPropertyChanging();
					this._MALOAIPHONG = value;
					this.SendPropertyChanged("MALOAIPHONG");
					this.OnMALOAIPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_PHIEUDATPHONG", Storage="_PHIEUDATPHONGs", ThisKey="MAPHONG", OtherKey="MAPHONG")]
		public EntitySet<PHIEUDATPHONG> PHIEUDATPHONGs
		{
			get
			{
				return this._PHIEUDATPHONGs;
			}
			set
			{
				this._PHIEUDATPHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIPHONG_PHONG", Storage="_LOAIPHONG", ThisKey="MALOAIPHONG", OtherKey="MALOAIPHONG", IsForeignKey=true, DeleteRule="CASCADE")]
		public LOAIPHONG LOAIPHONG
		{
			get
			{
				return this._LOAIPHONG.Entity;
			}
			set
			{
				LOAIPHONG previousValue = this._LOAIPHONG.Entity;
				if (((previousValue != value) 
							|| (this._LOAIPHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAIPHONG.Entity = null;
						previousValue.PHONGs.Remove(this);
					}
					this._LOAIPHONG.Entity = value;
					if ((value != null))
					{
						value.PHONGs.Add(this);
						this._MALOAIPHONG = value.MALOAIPHONG;
					}
					else
					{
						this._MALOAIPHONG = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOAIPHONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIEUDATPHONGs(PHIEUDATPHONG entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = this;
		}
		
		private void detach_PHIEUDATPHONGs(PHIEUDATPHONG entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAIKHOAN")]
	public partial class TAIKHOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TENDANGNHAP;
		
		private string _MATKHAU;
		
		private System.Nullable<int> _MANHANVIEN;
		
		private System.Nullable<int> _MAPHANQUYEN;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
		private EntityRef<PHANQUYEN> _PHANQUYEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTENDANGNHAPChanging(string value);
    partial void OnTENDANGNHAPChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    partial void OnMANHANVIENChanging(System.Nullable<int> value);
    partial void OnMANHANVIENChanged();
    partial void OnMAPHANQUYENChanging(System.Nullable<int> value);
    partial void OnMAPHANQUYENChanged();
    #endregion
		
		public TAIKHOAN()
		{
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			this._PHANQUYEN = default(EntityRef<PHANQUYEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENDANGNHAP", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TENDANGNHAP
		{
			get
			{
				return this._TENDANGNHAP;
			}
			set
			{
				if ((this._TENDANGNHAP != value))
				{
					this.OnTENDANGNHAPChanging(value);
					this.SendPropertyChanging();
					this._TENDANGNHAP = value;
					this.SendPropertyChanged("TENDANGNHAP");
					this.OnTENDANGNHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANHANVIEN", DbType="Int")]
		public System.Nullable<int> MANHANVIEN
		{
			get
			{
				return this._MANHANVIEN;
			}
			set
			{
				if ((this._MANHANVIEN != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANHANVIENChanging(value);
					this.SendPropertyChanging();
					this._MANHANVIEN = value;
					this.SendPropertyChanged("MANHANVIEN");
					this.OnMANHANVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHANQUYEN", DbType="Int")]
		public System.Nullable<int> MAPHANQUYEN
		{
			get
			{
				return this._MAPHANQUYEN;
			}
			set
			{
				if ((this._MAPHANQUYEN != value))
				{
					if (this._PHANQUYEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHANQUYENChanging(value);
					this.SendPropertyChanging();
					this._MAPHANQUYEN = value;
					this.SendPropertyChanged("MAPHANQUYEN");
					this.OnMAPHANQUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_TAIKHOAN", Storage="_NHANVIEN", ThisKey="MANHANVIEN", OtherKey="MANHANVIEN", IsForeignKey=true, DeleteRule="CASCADE")]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.TAIKHOANs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.TAIKHOANs.Add(this);
						this._MANHANVIEN = value.MANHANVIEN;
					}
					else
					{
						this._MANHANVIEN = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHANQUYEN_TAIKHOAN", Storage="_PHANQUYEN", ThisKey="MAPHANQUYEN", OtherKey="MAPHANQUYEN", IsForeignKey=true, DeleteRule="CASCADE")]
		public PHANQUYEN PHANQUYEN
		{
			get
			{
				return this._PHANQUYEN.Entity;
			}
			set
			{
				PHANQUYEN previousValue = this._PHANQUYEN.Entity;
				if (((previousValue != value) 
							|| (this._PHANQUYEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHANQUYEN.Entity = null;
						previousValue.TAIKHOANs.Remove(this);
					}
					this._PHANQUYEN.Entity = value;
					if ((value != null))
					{
						value.TAIKHOANs.Add(this);
						this._MAPHANQUYEN = value.MAPHANQUYEN;
					}
					else
					{
						this._MAPHANQUYEN = default(Nullable<int>);
					}
					this.SendPropertyChanged("PHANQUYEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
